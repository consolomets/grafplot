grep -rE 'location|proxy_pass' /путь/к/директории --include='*.conf' | awk -F: '
/location/ {
  file=$1;
  if (match($0, /location\s+([^ {]+)/, m)) loc=m[1];
}
/proxy_pass/ {
  if (match($0, /proxy_pass\s+([^ ;]+)/, m)) print file "\t" loc "\t" m[1];
}'


grep -rP '^\s*include\s+' /путь/к/директории --include='*.conf' | sed -E 's/^\s*([^:]+):\s*include\s+([^;]+);?.*$/\1\t\2/'


grep -rhoP 'include\s+[^;]+' /путь/к/директории | sed -E 's/^\s*include\s+//' | while read included; do find /путь/к/директории -type f -name "*.conf" -exec grep -l "include\s\+${included}" {} + | while read src; do echo -e "$src\t$included"; done; done



dir="/etc/nginx" && start="$dir/nginx.conf" && awk -v dir="$dir" -v start="$start" '
function resolve(file,   line, inc, full, real, i, glob_cmd, glob_path) {
  while ((getline line < file) > 0) {
    if (match(line, /^[[:space:]]*include[[:space:]]+([^;]+);?/, m)) {
      inc = m[1];
      gsub(/["'\''"]/, "", inc);

      # относительный путь → относительно текущего файла
      if (inc !~ /^\//) {
        base = file;
        sub(/[^\/]+$/, "", base);
        full = base inc;
      } else {
        full = inc;
      }

      # glob-шаблоны (например *.conf)
      glob_cmd = "ls -1 " full " 2>/dev/null";
      while ((glob_cmd | getline glob_path) > 0) {
        real_cmd = "realpath \"" glob_path "\"";
        if ((real_cmd | getline real) > 0) {
          if (!(real in seen)) {
            seen[real] = 1;
            print file "\t" real;
            resolve(real);
          }
        }
        close(real_cmd);
      }
      close(glob_cmd);
    }
  }
  close(file);
}
BEGIN {
  cmd = "realpath \"" start "\"";
  if ((cmd | getline realstart) > 0) {
    close(cmd);
    seen[realstart] = 1;
    resolve(realstart);
  } else {
    print "ERROR: cannot resolve realpath of start file" > "/dev/stderr";
    exit 1;
  }
}
' > nginx_deps.tsv


