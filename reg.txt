while read file; do
  awk '
    $0 ~ /^[ \t]*location[ \t]+/ {
      if (match($0, /location[ \t]+([^ \t{]+)/, m)) {
        loc = m[1]
        in_location = 1
      }
    }
    in_location && $0 ~ /proxy_pass[ \t]+/ {
      if (match($0, /proxy_pass[ \t]+([^ \t;]+)/, m)) {
        print FILENAME "\t" loc "\t" m[1]
        in_location = 0
      }
    }
    $0 ~ /}/ { in_location = 0 }
  ' "$file"
done < список_файлов.txt



grep -rP '^\s*include\s+' /путь/к/директории --include='*.conf' | sed -E 's/^\s*([^:]+):\s*include\s+([^;]+);?.*$/\1\t\2/'


grep -rhoP 'include\s+[^;]+' /путь/к/директории | sed -E 's/^\s*include\s+//' | while read included; do find /путь/к/директории -type f -name "*.conf" -exec grep -l "include\s\+${included}" {} + | while read src; do echo -e "$src\t$included"; done; done



dir="/etc/nginx"
start="$dir/nginx.conf"

awk -v start="$start" '
function resolve(file,   line, inc, full, parts, n, i, base) {
  if (seen[file]++) return  # уже обработан

  print ">> scanning: " file > "/dev/stderr"

  while ((getline line < file) > 0) {
    if (line ~ /[ \t]*include[ \t]+/) {
      gsub(/;/, "", line)
      sub(/^[ \t]*include[ \t]+/, "", line)
      inc = line
      gsub(/["'\''"]/, "", inc)

      # если путь относительный — делаем абсолютный на основе текущего файла
      if (substr(inc, 1, 1) != "/") {
        n = split(file, parts, "/")
        base = ""
        for (i = 1; i < n; i++) base = base "/" parts[i]
        full = base "/" inc
      } else {
        full = inc
      }

      # glob-расширение вручную
      cmd = "ls -1 " full " 2>/dev/null"
      while ((cmd | getline matchpath) > 0) {
        print file "\t" matchpath
        resolve(matchpath)
      }
      close(cmd)
    }
  }
  close(file)
}
BEGIN {
  resolve(start)
}
' > nginx_deps.tsv




